name: Deploy LanGuard-CVE-Update Lambda

on:
  push:
    branches:
      - main
  pull_request:
    types: [closed]
    branches:
      - main
  workflow_dispatch:  # Allow manual triggering

jobs:
  deploy-lambda:
    runs-on: ubuntu-latest
    environment: development
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          sparse-checkout: |
            .github/workflows/lambda
          sparse-checkout-cone-mode: false
          fetch-depth: 1
        
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install boto3 aws-sam-cli
          
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          
      - name: Create deployment package
        run: |
          mkdir -p lambda_package
          cp .github/workflows/lambda/lambda_function.py lambda_package/lambda_function.py
          cd lambda_package
          pip install boto3 -t .
          zip -r ../lambda_deployment_package.zip .
          cd ..
          
      - name: Check for Lambda file changes
        id: check_lambda_changes
        run: |
          # For manual workflow runs or initial creation, always update the function
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "Manual workflow run, will update function"
            echo "lambda_files_changed=true" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          # For sparse checkout, we know we're only checking Lambda files
          # If any files are present in the checkout, they've changed
          if [ -f ".github/workflows/lambda/lambda_function.py" ] || [ -f ".github/workflows/lambda/lambda-deploy.yml" ]; then
            echo "Lambda files present in sparse checkout, will update function"
            echo "lambda_files_changed=true" >> $GITHUB_OUTPUT
          else
            echo "No Lambda files in sparse checkout"
            echo "lambda_files_changed=false" >> $GITHUB_OUTPUT
          fi
          
      - name: Deploy Lambda function
        run: |
          # Check if Lambda function exists
          if aws lambda get-function --function-name LanGuard-CVE-Update &> /dev/null; then
            # Function exists, check if we need to update it
            if [[ "${{ steps.check_lambda_changes.outputs.lambda_files_changed }}" == "true" ]]; then
              echo "Updating existing Lambda function..."
              aws lambda update-function-code \
                --function-name LanGuard-CVE-Update \
                --zip-file fileb://lambda_deployment_package.zip
            else
              echo "Lambda function exists and no Lambda files changed, skipping update."
            fi
          else
            # Create new function regardless of which files changed
            echo "Creating new Lambda function..."
            aws lambda create-function \
              --function-name LanGuard-CVE-Update \
              --runtime python3.10 \
              --handler lambda_function.lambda_handler \
              --role ${{ secrets.LAMBDA_EXECUTION_ROLE }} \
              --zip-file fileb://lambda_deployment_package.zip \
              --timeout 60 \
              --memory-size 256
          fi
          